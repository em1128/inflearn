클론 코딩 강의 듣는 노하우

1.github에 프로젝트 결과물 올리기

2.사이드 프로젝트(유사한 프로젝트) 동시에 진행해보기

3.조금씩 다르게 변형시켜 보기

4.다시 한 번 복습해보기

5.문서화하기(마크다운 파일?)

https://geonlee.tistory.com/171


개발 분야 선택

1.웹/앱 개발
2.DevOps/인프라 개발
3.Data Engineer
4.AI/머신러닝 개발
5.임베디드 개발
6.게임 개발
7.보안

웹사이트 모바일버전 확인하기 -> F12 -> Toggle device toolbar(크롬에서 가능)

Android iOS 구분 없이 개발하기 -> React Native, Flutter 활용

프론트엔드 개발이 처리하는 부분이 점점 광범위해짐
 ->( ex) 페이지 스크롤 위치를 계산해서 미리 숙소 더 보기 이미지를 서버에 요청)
      ex) 마우스를 올리면 간단한 팝업 애니메이션으로 미리 불러온 정보를 표시)

로그인, 회원가입을 처리하는 방식은 세션이나 쿠키 등 다양한 방법이 있음

언어 / 웹 프레임워크

 Java / Spring
 Python / Django
 Javascript / Express
 PHP / Laravel
 ----백엔드

 React.js, Vue.js, Angular.js, Svelte
 ----프론트엔드

공부 사이트 
1.MDN(모질라 디벨로퍼 네트워크) 사이트
2.칸 아카데미
3.자바스크립트 인포
4.dev.to
5.scotch.io


DNS(Domain Name Server)
 == 도메인(www)

수직적 확장(장치의 성능 증대)보다
수평적 확장(새로운 장치의 추가)가 더 선호된다.
 why? 1대의 서버가 고장나더라도 '오류 내성'이 생기게 된다.
 -> 로드 밸런서를 쓰는 이유

Redis는 캐싱 서버 기술

잡 큐(job queue)는 비동기적인 작업을 가능하게 하는 아키텍쳐

데이터 파이프라인 : 대량의 데이터를 제어, 저장, 분석하기 위해 사용

1. 데이터를 'firehose'로 전달, 그 후 가공을 거쳐 다른 firehose로 전달
2. 원시 데이터와 최종 데이터는 모두 클라우드 스토리지에 저장.
3. 변형/추가된 데이터는 분석을 위해 데이터 웨어하우스(DW)에서 로드됨.


